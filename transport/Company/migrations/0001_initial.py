# Generated by Django 5.0.14 on 2025-06-01 09:54

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Transporteurs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('firstname', models.CharField(max_length=50)),
                ('date_de_naissance', models.DateField()),
                ('adresse', models.TextField()),
                ('ville', models.CharField(max_length=30)),
                ('permis', models.CharField(default='', max_length=5)),
                ('phone', models.CharField(max_length=60)),
                ('email', models.EmailField(max_length=254)),
            ],
            options={
                'verbose_name': 'Transporteur',
                'verbose_name_plural': 'Transporteurs',
                'ordering': ['name', 'firstname'],
            },
        ),
        migrations.CreateModel(
            name='Voyageurs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('firstname', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=254)),
            ],
            options={
                'verbose_name': 'Voyageur',
                'verbose_name_plural': 'Voyageurs',
            },
        ),
        migrations.CreateModel(
            name='Compagnie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('siren', models.BigIntegerField()),
                ('transporteurs', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Company.transporteurs')),
            ],
            options={
                'verbose_name': 'Compagnie',
                'verbose_name_plural': 'Compagnies',
            },
        ),
        migrations.CreateModel(
            name='Voyages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_depart', models.DateTimeField()),
                ('date_arrivee', models.DateTimeField()),
                ('ville_depart', models.CharField(max_length=50)),
                ('ville_arrivee', models.CharField(max_length=50)),
                ('prix_unitaire', models.FloatField()),
                ('transporteurs', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Company.transporteurs')),
            ],
            options={
                'verbose_name': 'Voyage',
                'verbose_name_plural': 'Voyages',
            },
        ),
        migrations.CreateModel(
            name='Transports',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('marque', models.CharField(max_length=50)),
                ('matricule', models.CharField(default='', max_length=50)),
                ('nombre_de_place', models.IntegerField()),
                ('compagnie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Company.compagnie')),
                ('voyages', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Company.voyages')),
            ],
            options={
                'verbose_name': 'Transport',
                'verbose_name_plural': 'Transports',
            },
        ),
        migrations.CreateModel(
            name='MessageClientChauffeur',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contenu', models.TextField()),
                ('horodatage', models.DateTimeField(auto_now_add=True)),
                ('expediteur', models.CharField(choices=[('voyageur', 'Voyageur'), ('transporteur', 'Transporteur')], max_length=20)),
                ('transporteur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages_recus', to='Company.transporteurs')),
                ('voyageur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages_envoyes', to='Company.voyageurs')),
            ],
            options={
                'ordering': ['-horodatage'],
            },
        ),
        migrations.CreateModel(
            name='Asso_trans_voyageur',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transporteurs', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Company.transporteurs')),
                ('voyageurs', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Company.voyageurs')),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='voyageurs',
            name='user',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='VerificationCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=6)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='transporteurs',
            name='user',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
    ]
